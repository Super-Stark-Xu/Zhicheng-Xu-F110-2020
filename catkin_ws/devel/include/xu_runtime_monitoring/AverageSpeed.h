// Generated by gencpp from file xu_runtime_monitoring/AverageSpeed.msg
// DO NOT EDIT!


#ifndef XU_RUNTIME_MONITORING_MESSAGE_AVERAGESPEED_H
#define XU_RUNTIME_MONITORING_MESSAGE_AVERAGESPEED_H

#include <ros/service_traits.h>


#include <xu_runtime_monitoring/AverageSpeedRequest.h>
#include <xu_runtime_monitoring/AverageSpeedResponse.h>


namespace xu_runtime_monitoring
{

struct AverageSpeed
{

typedef AverageSpeedRequest Request;
typedef AverageSpeedResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AverageSpeed
} // namespace xu_runtime_monitoring


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::xu_runtime_monitoring::AverageSpeed > {
  static const char* value()
  {
    return "221e08f65343de99d29b1a4f55b68d0b";
  }

  static const char* value(const ::xu_runtime_monitoring::AverageSpeed&) { return value(); }
};

template<>
struct DataType< ::xu_runtime_monitoring::AverageSpeed > {
  static const char* value()
  {
    return "xu_runtime_monitoring/AverageSpeed";
  }

  static const char* value(const ::xu_runtime_monitoring::AverageSpeed&) { return value(); }
};


// service_traits::MD5Sum< ::xu_runtime_monitoring::AverageSpeedRequest> should match 
// service_traits::MD5Sum< ::xu_runtime_monitoring::AverageSpeed > 
template<>
struct MD5Sum< ::xu_runtime_monitoring::AverageSpeedRequest>
{
  static const char* value()
  {
    return MD5Sum< ::xu_runtime_monitoring::AverageSpeed >::value();
  }
  static const char* value(const ::xu_runtime_monitoring::AverageSpeedRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::xu_runtime_monitoring::AverageSpeedRequest> should match 
// service_traits::DataType< ::xu_runtime_monitoring::AverageSpeed > 
template<>
struct DataType< ::xu_runtime_monitoring::AverageSpeedRequest>
{
  static const char* value()
  {
    return DataType< ::xu_runtime_monitoring::AverageSpeed >::value();
  }
  static const char* value(const ::xu_runtime_monitoring::AverageSpeedRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::xu_runtime_monitoring::AverageSpeedResponse> should match 
// service_traits::MD5Sum< ::xu_runtime_monitoring::AverageSpeed > 
template<>
struct MD5Sum< ::xu_runtime_monitoring::AverageSpeedResponse>
{
  static const char* value()
  {
    return MD5Sum< ::xu_runtime_monitoring::AverageSpeed >::value();
  }
  static const char* value(const ::xu_runtime_monitoring::AverageSpeedResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::xu_runtime_monitoring::AverageSpeedResponse> should match 
// service_traits::DataType< ::xu_runtime_monitoring::AverageSpeed > 
template<>
struct DataType< ::xu_runtime_monitoring::AverageSpeedResponse>
{
  static const char* value()
  {
    return DataType< ::xu_runtime_monitoring::AverageSpeed >::value();
  }
  static const char* value(const ::xu_runtime_monitoring::AverageSpeedResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // XU_RUNTIME_MONITORING_MESSAGE_AVERAGESPEED_H
